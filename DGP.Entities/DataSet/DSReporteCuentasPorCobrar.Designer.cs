//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DGP.Entities.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSReporteCuentasPorCobrar")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSReporteCuentasPorCobrar : global::System.Data.DataSet {
        
        private DTSaldosDataTable tableDTSaldos;
        
        private DTHojaCobranzaDataTable tableDTHojaCobranza;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSReporteCuentasPorCobrar() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSReporteCuentasPorCobrar(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DTSaldos"] != null)) {
                    base.Tables.Add(new DTSaldosDataTable(ds.Tables["DTSaldos"]));
                }
                if ((ds.Tables["DTHojaCobranza"] != null)) {
                    base.Tables.Add(new DTHojaCobranzaDataTable(ds.Tables["DTHojaCobranza"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DTSaldosDataTable DTSaldos {
            get {
                return this.tableDTSaldos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DTHojaCobranzaDataTable DTHojaCobranza {
            get {
                return this.tableDTHojaCobranza;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSReporteCuentasPorCobrar cln = ((DSReporteCuentasPorCobrar)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DTSaldos"] != null)) {
                    base.Tables.Add(new DTSaldosDataTable(ds.Tables["DTSaldos"]));
                }
                if ((ds.Tables["DTHojaCobranza"] != null)) {
                    base.Tables.Add(new DTHojaCobranzaDataTable(ds.Tables["DTHojaCobranza"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDTSaldos = ((DTSaldosDataTable)(base.Tables["DTSaldos"]));
            if ((initTable == true)) {
                if ((this.tableDTSaldos != null)) {
                    this.tableDTSaldos.InitVars();
                }
            }
            this.tableDTHojaCobranza = ((DTHojaCobranzaDataTable)(base.Tables["DTHojaCobranza"]));
            if ((initTable == true)) {
                if ((this.tableDTHojaCobranza != null)) {
                    this.tableDTHojaCobranza.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSReporteCuentasPorCobrar";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSReporteCuentasPorCobrar.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDTSaldos = new DTSaldosDataTable();
            base.Tables.Add(this.tableDTSaldos);
            this.tableDTHojaCobranza = new DTHojaCobranzaDataTable();
            base.Tables.Add(this.tableDTHojaCobranza);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDTSaldos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDTHojaCobranza() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSReporteCuentasPorCobrar ds = new DSReporteCuentasPorCobrar();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DTSaldosRowChangeEventHandler(object sender, DTSaldosRowChangeEvent e);
        
        public delegate void DTHojaCobranzaRowChangeEventHandler(object sender, DTHojaCobranzaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DTSaldosDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnombres;
            
            private global::System.Data.DataColumn columnVentaDia;
            
            private global::System.Data.DataColumn columnSaldo;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnultimaVenta;
            
            private global::System.Data.DataColumn columnPeriodoDeuda;
            
            private global::System.Data.DataColumn columnRango;
            
            private global::System.Data.DataColumn columndiffd4;
            
            private global::System.Data.DataColumn columndiffd3;
            
            private global::System.Data.DataColumn columndiffd2;
            
            private global::System.Data.DataColumn columndiffd1;
            
            private global::System.Data.DataColumn columndiffd0;
            
            private global::System.Data.DataColumn columnIncrementoSaldo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosDataTable() {
                this.TableName = "DTSaldos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DTSaldosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DTSaldosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombresColumn {
                get {
                    return this.columnnombres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VentaDiaColumn {
                get {
                    return this.columnVentaDia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ultimaVentaColumn {
                get {
                    return this.columnultimaVenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoDeudaColumn {
                get {
                    return this.columnPeriodoDeuda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RangoColumn {
                get {
                    return this.columnRango;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diffd4Column {
                get {
                    return this.columndiffd4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diffd3Column {
                get {
                    return this.columndiffd3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diffd2Column {
                get {
                    return this.columndiffd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diffd1Column {
                get {
                    return this.columndiffd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diffd0Column {
                get {
                    return this.columndiffd0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncrementoSaldoColumn {
                get {
                    return this.columnIncrementoSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosRow this[int index] {
                get {
                    return ((DTSaldosRow)(this.Rows[index]));
                }
            }
            
            public event DTSaldosRowChangeEventHandler DTSaldosRowChanging;
            
            public event DTSaldosRowChangeEventHandler DTSaldosRowChanged;
            
            public event DTSaldosRowChangeEventHandler DTSaldosRowDeleting;
            
            public event DTSaldosRowChangeEventHandler DTSaldosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDTSaldosRow(DTSaldosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosRow AddDTSaldosRow(string nombres, decimal VentaDia, decimal Saldo, decimal Total, System.DateTime ultimaVenta, int PeriodoDeuda, string Rango, decimal diffd4, decimal diffd3, decimal diffd2, decimal diffd1, decimal diffd0, decimal IncrementoSaldo) {
                DTSaldosRow rowDTSaldosRow = ((DTSaldosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombres,
                        VentaDia,
                        Saldo,
                        Total,
                        ultimaVenta,
                        PeriodoDeuda,
                        Rango,
                        diffd4,
                        diffd3,
                        diffd2,
                        diffd1,
                        diffd0,
                        IncrementoSaldo};
                rowDTSaldosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDTSaldosRow);
                return rowDTSaldosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DTSaldosDataTable cln = ((DTSaldosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DTSaldosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombres = base.Columns["nombres"];
                this.columnVentaDia = base.Columns["VentaDia"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnTotal = base.Columns["Total"];
                this.columnultimaVenta = base.Columns["ultimaVenta"];
                this.columnPeriodoDeuda = base.Columns["PeriodoDeuda"];
                this.columnRango = base.Columns["Rango"];
                this.columndiffd4 = base.Columns["diffd4"];
                this.columndiffd3 = base.Columns["diffd3"];
                this.columndiffd2 = base.Columns["diffd2"];
                this.columndiffd1 = base.Columns["diffd1"];
                this.columndiffd0 = base.Columns["diffd0"];
                this.columnIncrementoSaldo = base.Columns["IncrementoSaldo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombres = new global::System.Data.DataColumn("nombres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombres);
                this.columnVentaDia = new global::System.Data.DataColumn("VentaDia", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVentaDia);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnultimaVenta = new global::System.Data.DataColumn("ultimaVenta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnultimaVenta);
                this.columnPeriodoDeuda = new global::System.Data.DataColumn("PeriodoDeuda", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoDeuda);
                this.columnRango = new global::System.Data.DataColumn("Rango", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRango);
                this.columndiffd4 = new global::System.Data.DataColumn("diffd4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffd4);
                this.columndiffd3 = new global::System.Data.DataColumn("diffd3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffd3);
                this.columndiffd2 = new global::System.Data.DataColumn("diffd2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffd2);
                this.columndiffd1 = new global::System.Data.DataColumn("diffd1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffd1);
                this.columndiffd0 = new global::System.Data.DataColumn("diffd0", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiffd0);
                this.columnIncrementoSaldo = new global::System.Data.DataColumn("IncrementoSaldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncrementoSaldo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosRow NewDTSaldosRow() {
                return ((DTSaldosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DTSaldosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DTSaldosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DTSaldosRowChanged != null)) {
                    this.DTSaldosRowChanged(this, new DTSaldosRowChangeEvent(((DTSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DTSaldosRowChanging != null)) {
                    this.DTSaldosRowChanging(this, new DTSaldosRowChangeEvent(((DTSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DTSaldosRowDeleted != null)) {
                    this.DTSaldosRowDeleted(this, new DTSaldosRowChangeEvent(((DTSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DTSaldosRowDeleting != null)) {
                    this.DTSaldosRowDeleting(this, new DTSaldosRowChangeEvent(((DTSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDTSaldosRow(DTSaldosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSReporteCuentasPorCobrar ds = new DSReporteCuentasPorCobrar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DTSaldosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DTHojaCobranzaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnombres;
            
            private global::System.Data.DataColumn columnId_cliente;
            
            private global::System.Data.DataColumn columnZona;
            
            private global::System.Data.DataColumn columnFechaCobranza;
            
            private global::System.Data.DataColumn columnultimaVenta;
            
            private global::System.Data.DataColumn columnSALDO;
            
            private global::System.Data.DataColumn columnorden;
            
            private global::System.Data.DataColumn columnVENTA;
            
            private global::System.Data.DataColumn columnPAGOS;
            
            private global::System.Data.DataColumn columnACUMULADO;
            
            private global::System.Data.DataColumn columnProductos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaDataTable() {
                this.TableName = "DTHojaCobranza";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DTHojaCobranzaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DTHojaCobranzaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombresColumn {
                get {
                    return this.columnnombres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_clienteColumn {
                get {
                    return this.columnId_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZonaColumn {
                get {
                    return this.columnZona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaCobranzaColumn {
                get {
                    return this.columnFechaCobranza;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ultimaVentaColumn {
                get {
                    return this.columnultimaVenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALDOColumn {
                get {
                    return this.columnSALDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ordenColumn {
                get {
                    return this.columnorden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VENTAColumn {
                get {
                    return this.columnVENTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAGOSColumn {
                get {
                    return this.columnPAGOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACUMULADOColumn {
                get {
                    return this.columnACUMULADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductosColumn {
                get {
                    return this.columnProductos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaRow this[int index] {
                get {
                    return ((DTHojaCobranzaRow)(this.Rows[index]));
                }
            }
            
            public event DTHojaCobranzaRowChangeEventHandler DTHojaCobranzaRowChanging;
            
            public event DTHojaCobranzaRowChangeEventHandler DTHojaCobranzaRowChanged;
            
            public event DTHojaCobranzaRowChangeEventHandler DTHojaCobranzaRowDeleting;
            
            public event DTHojaCobranzaRowChangeEventHandler DTHojaCobranzaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDTHojaCobranzaRow(DTHojaCobranzaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaRow AddDTHojaCobranzaRow(string nombres, int Id_cliente, string Zona, System.DateTime FechaCobranza, System.DateTime ultimaVenta, decimal SALDO, int orden, decimal VENTA, decimal PAGOS, decimal ACUMULADO, string Productos) {
                DTHojaCobranzaRow rowDTHojaCobranzaRow = ((DTHojaCobranzaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombres,
                        Id_cliente,
                        Zona,
                        FechaCobranza,
                        ultimaVenta,
                        SALDO,
                        orden,
                        VENTA,
                        PAGOS,
                        ACUMULADO,
                        Productos};
                rowDTHojaCobranzaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDTHojaCobranzaRow);
                return rowDTHojaCobranzaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DTHojaCobranzaDataTable cln = ((DTHojaCobranzaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DTHojaCobranzaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombres = base.Columns["nombres"];
                this.columnId_cliente = base.Columns["Id_cliente"];
                this.columnZona = base.Columns["Zona"];
                this.columnFechaCobranza = base.Columns["FechaCobranza"];
                this.columnultimaVenta = base.Columns["ultimaVenta"];
                this.columnSALDO = base.Columns["SALDO"];
                this.columnorden = base.Columns["orden"];
                this.columnVENTA = base.Columns["VENTA"];
                this.columnPAGOS = base.Columns["PAGOS"];
                this.columnACUMULADO = base.Columns["ACUMULADO"];
                this.columnProductos = base.Columns["Productos"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombres = new global::System.Data.DataColumn("nombres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombres);
                this.columnId_cliente = new global::System.Data.DataColumn("Id_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_cliente);
                this.columnZona = new global::System.Data.DataColumn("Zona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZona);
                this.columnFechaCobranza = new global::System.Data.DataColumn("FechaCobranza", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaCobranza);
                this.columnultimaVenta = new global::System.Data.DataColumn("ultimaVenta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnultimaVenta);
                this.columnSALDO = new global::System.Data.DataColumn("SALDO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALDO);
                this.columnorden = new global::System.Data.DataColumn("orden", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorden);
                this.columnVENTA = new global::System.Data.DataColumn("VENTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVENTA);
                this.columnPAGOS = new global::System.Data.DataColumn("PAGOS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAGOS);
                this.columnACUMULADO = new global::System.Data.DataColumn("ACUMULADO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACUMULADO);
                this.columnProductos = new global::System.Data.DataColumn("Productos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductos);
                this.columnId_cliente.Caption = "VentaDia";
                this.columnZona.Caption = "Saldo";
                this.columnFechaCobranza.Caption = "Total";
                this.columnSALDO.Caption = "PeriodoDeuda";
                this.columnorden.Caption = "Rango";
                this.columnVENTA.Caption = "diffd4";
                this.columnPAGOS.Caption = "diffd3";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaRow NewDTHojaCobranzaRow() {
                return ((DTHojaCobranzaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DTHojaCobranzaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DTHojaCobranzaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DTHojaCobranzaRowChanged != null)) {
                    this.DTHojaCobranzaRowChanged(this, new DTHojaCobranzaRowChangeEvent(((DTHojaCobranzaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DTHojaCobranzaRowChanging != null)) {
                    this.DTHojaCobranzaRowChanging(this, new DTHojaCobranzaRowChangeEvent(((DTHojaCobranzaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DTHojaCobranzaRowDeleted != null)) {
                    this.DTHojaCobranzaRowDeleted(this, new DTHojaCobranzaRowChangeEvent(((DTHojaCobranzaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DTHojaCobranzaRowDeleting != null)) {
                    this.DTHojaCobranzaRowDeleting(this, new DTHojaCobranzaRowChangeEvent(((DTHojaCobranzaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDTHojaCobranzaRow(DTHojaCobranzaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSReporteCuentasPorCobrar ds = new DSReporteCuentasPorCobrar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DTHojaCobranzaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DTSaldosRow : global::System.Data.DataRow {
            
            private DTSaldosDataTable tableDTSaldos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DTSaldosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDTSaldos = ((DTSaldosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombres {
                get {
                    try {
                        return ((string)(this[this.tableDTSaldos.nombresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombres\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.nombresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VentaDia {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.VentaDiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VentaDia\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.VentaDiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldo\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ultimaVenta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTSaldos.ultimaVentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ultimaVenta\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.ultimaVentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PeriodoDeuda {
                get {
                    try {
                        return ((int)(this[this.tableDTSaldos.PeriodoDeudaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PeriodoDeuda\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.PeriodoDeudaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rango {
                get {
                    try {
                        return ((string)(this[this.tableDTSaldos.RangoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rango\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.RangoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal diffd4 {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.diffd4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diffd4\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.diffd4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal diffd3 {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.diffd3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diffd3\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.diffd3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal diffd2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.diffd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diffd2\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.diffd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal diffd1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.diffd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diffd1\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.diffd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal diffd0 {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.diffd0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diffd0\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.diffd0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IncrementoSaldo {
                get {
                    try {
                        return ((decimal)(this[this.tableDTSaldos.IncrementoSaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncrementoSaldo\' in table \'DTSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTSaldos.IncrementoSaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombresNull() {
                return this.IsNull(this.tableDTSaldos.nombresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombresNull() {
                this[this.tableDTSaldos.nombresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVentaDiaNull() {
                return this.IsNull(this.tableDTSaldos.VentaDiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVentaDiaNull() {
                this[this.tableDTSaldos.VentaDiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tableDTSaldos.SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tableDTSaldos.SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableDTSaldos.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableDTSaldos.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsultimaVentaNull() {
                return this.IsNull(this.tableDTSaldos.ultimaVentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetultimaVentaNull() {
                this[this.tableDTSaldos.ultimaVentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoDeudaNull() {
                return this.IsNull(this.tableDTSaldos.PeriodoDeudaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoDeudaNull() {
                this[this.tableDTSaldos.PeriodoDeudaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRangoNull() {
                return this.IsNull(this.tableDTSaldos.RangoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRangoNull() {
                this[this.tableDTSaldos.RangoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiffd4Null() {
                return this.IsNull(this.tableDTSaldos.diffd4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiffd4Null() {
                this[this.tableDTSaldos.diffd4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiffd3Null() {
                return this.IsNull(this.tableDTSaldos.diffd3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiffd3Null() {
                this[this.tableDTSaldos.diffd3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiffd2Null() {
                return this.IsNull(this.tableDTSaldos.diffd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiffd2Null() {
                this[this.tableDTSaldos.diffd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiffd1Null() {
                return this.IsNull(this.tableDTSaldos.diffd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiffd1Null() {
                this[this.tableDTSaldos.diffd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiffd0Null() {
                return this.IsNull(this.tableDTSaldos.diffd0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiffd0Null() {
                this[this.tableDTSaldos.diffd0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncrementoSaldoNull() {
                return this.IsNull(this.tableDTSaldos.IncrementoSaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncrementoSaldoNull() {
                this[this.tableDTSaldos.IncrementoSaldoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DTHojaCobranzaRow : global::System.Data.DataRow {
            
            private DTHojaCobranzaDataTable tableDTHojaCobranza;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DTHojaCobranzaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDTHojaCobranza = ((DTHojaCobranzaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombres {
                get {
                    try {
                        return ((string)(this[this.tableDTHojaCobranza.nombresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombres\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.nombresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_cliente {
                get {
                    try {
                        return ((int)(this[this.tableDTHojaCobranza.Id_clienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Id_cliente\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.Id_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zona {
                get {
                    try {
                        return ((string)(this[this.tableDTHojaCobranza.ZonaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zona\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.ZonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaCobranza {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTHojaCobranza.FechaCobranzaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaCobranza\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.FechaCobranzaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ultimaVenta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDTHojaCobranza.ultimaVentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ultimaVenta\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.ultimaVentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableDTHojaCobranza.SALDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SALDO\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.SALDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orden {
                get {
                    try {
                        return ((int)(this[this.tableDTHojaCobranza.ordenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orden\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.ordenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VENTA {
                get {
                    try {
                        return ((decimal)(this[this.tableDTHojaCobranza.VENTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VENTA\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.VENTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAGOS {
                get {
                    try {
                        return ((decimal)(this[this.tableDTHojaCobranza.PAGOSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAGOS\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.PAGOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACUMULADO {
                get {
                    try {
                        return ((decimal)(this[this.tableDTHojaCobranza.ACUMULADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACUMULADO\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.ACUMULADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Productos {
                get {
                    try {
                        return ((string)(this[this.tableDTHojaCobranza.ProductosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Productos\' in table \'DTHojaCobranza\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDTHojaCobranza.ProductosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombresNull() {
                return this.IsNull(this.tableDTHojaCobranza.nombresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombresNull() {
                this[this.tableDTHojaCobranza.nombresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsId_clienteNull() {
                return this.IsNull(this.tableDTHojaCobranza.Id_clienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetId_clienteNull() {
                this[this.tableDTHojaCobranza.Id_clienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZonaNull() {
                return this.IsNull(this.tableDTHojaCobranza.ZonaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZonaNull() {
                this[this.tableDTHojaCobranza.ZonaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaCobranzaNull() {
                return this.IsNull(this.tableDTHojaCobranza.FechaCobranzaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaCobranzaNull() {
                this[this.tableDTHojaCobranza.FechaCobranzaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsultimaVentaNull() {
                return this.IsNull(this.tableDTHojaCobranza.ultimaVentaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetultimaVentaNull() {
                this[this.tableDTHojaCobranza.ultimaVentaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALDONull() {
                return this.IsNull(this.tableDTHojaCobranza.SALDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALDONull() {
                this[this.tableDTHojaCobranza.SALDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsordenNull() {
                return this.IsNull(this.tableDTHojaCobranza.ordenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetordenNull() {
                this[this.tableDTHojaCobranza.ordenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVENTANull() {
                return this.IsNull(this.tableDTHojaCobranza.VENTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVENTANull() {
                this[this.tableDTHojaCobranza.VENTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAGOSNull() {
                return this.IsNull(this.tableDTHojaCobranza.PAGOSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAGOSNull() {
                this[this.tableDTHojaCobranza.PAGOSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACUMULADONull() {
                return this.IsNull(this.tableDTHojaCobranza.ACUMULADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACUMULADONull() {
                this[this.tableDTHojaCobranza.ACUMULADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductosNull() {
                return this.IsNull(this.tableDTHojaCobranza.ProductosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductosNull() {
                this[this.tableDTHojaCobranza.ProductosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DTSaldosRowChangeEvent : global::System.EventArgs {
            
            private DTSaldosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosRowChangeEvent(DTSaldosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTSaldosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DTHojaCobranzaRowChangeEvent : global::System.EventArgs {
            
            private DTHojaCobranzaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaRowChangeEvent(DTHojaCobranzaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DTHojaCobranzaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591