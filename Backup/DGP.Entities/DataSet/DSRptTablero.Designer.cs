//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.1433
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DGP.Entities.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSRptTablero")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSRptTablero : global::System.Data.DataSet {
        
        private TABLERODataTable tableTABLERO;
        
        private MOVIMIENTOSDataTable tableMOVIMIENTOS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSRptTablero() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSRptTablero(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TABLERO"] != null)) {
                    base.Tables.Add(new TABLERODataTable(ds.Tables["TABLERO"]));
                }
                if ((ds.Tables["MOVIMIENTOS"] != null)) {
                    base.Tables.Add(new MOVIMIENTOSDataTable(ds.Tables["MOVIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TABLERODataTable TABLERO {
            get {
                return this.tableTABLERO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOVIMIENTOSDataTable MOVIMIENTOS {
            get {
                return this.tableMOVIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSRptTablero cln = ((DSRptTablero)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TABLERO"] != null)) {
                    base.Tables.Add(new TABLERODataTable(ds.Tables["TABLERO"]));
                }
                if ((ds.Tables["MOVIMIENTOS"] != null)) {
                    base.Tables.Add(new MOVIMIENTOSDataTable(ds.Tables["MOVIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTABLERO = ((TABLERODataTable)(base.Tables["TABLERO"]));
            if ((initTable == true)) {
                if ((this.tableTABLERO != null)) {
                    this.tableTABLERO.InitVars();
                }
            }
            this.tableMOVIMIENTOS = ((MOVIMIENTOSDataTable)(base.Tables["MOVIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableMOVIMIENTOS != null)) {
                    this.tableMOVIMIENTOS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSRptTablero";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSRptTablero.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTABLERO = new TABLERODataTable();
            base.Tables.Add(this.tableTABLERO);
            this.tableMOVIMIENTOS = new MOVIMIENTOSDataTable();
            base.Tables.Add(this.tableMOVIMIENTOS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTABLERO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOVIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSRptTablero ds = new DSRptTablero();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TABLERORowChangeEventHandler(object sender, TABLERORowChangeEvent e);
        
        public delegate void MOVIMIENTOSRowChangeEventHandler(object sender, MOVIMIENTOSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TABLERODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstr_fecha_venta;
            
            private global::System.Data.DataColumn columnfecha_venta;
            
            private global::System.Data.DataColumn columnzona;
            
            private global::System.Data.DataColumn columnnombre_cliente;
            
            private global::System.Data.DataColumn columnPeso_bruto1;
            
            private global::System.Data.DataColumn columnPeso_bruto2;
            
            private global::System.Data.DataColumn columnTotal_Bruto;
            
            private global::System.Data.DataColumn columnTotal_Tara;
            
            private global::System.Data.DataColumn columnTotal_Neto_Devoluciones;
            
            private global::System.Data.DataColumn columnTotal_Neto;
            
            private global::System.Data.DataColumn columnTotal_Importe;
            
            private global::System.Data.DataColumn columnTotal_Amortizacion;
            
            private global::System.Data.DataColumn columnTotal_Saldo;
            
            private global::System.Data.DataColumn columnTotal_Jabas;
            
            private global::System.Data.DataColumn columnObservacion;
            
            private global::System.Data.DataColumn columnproducto;
            
            private global::System.Data.DataColumn columnPrimera_Fila;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERODataTable() {
                this.TableName = "TABLERO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TABLERODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TABLERODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn str_fecha_ventaColumn {
                get {
                    return this.columnstr_fecha_venta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fecha_ventaColumn {
                get {
                    return this.columnfecha_venta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zonaColumn {
                get {
                    return this.columnzona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombre_clienteColumn {
                get {
                    return this.columnnombre_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Peso_bruto1Column {
                get {
                    return this.columnPeso_bruto1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Peso_bruto2Column {
                get {
                    return this.columnPeso_bruto2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_BrutoColumn {
                get {
                    return this.columnTotal_Bruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_TaraColumn {
                get {
                    return this.columnTotal_Tara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_Neto_DevolucionesColumn {
                get {
                    return this.columnTotal_Neto_Devoluciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_NetoColumn {
                get {
                    return this.columnTotal_Neto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_ImporteColumn {
                get {
                    return this.columnTotal_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_AmortizacionColumn {
                get {
                    return this.columnTotal_Amortizacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_SaldoColumn {
                get {
                    return this.columnTotal_Saldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_JabasColumn {
                get {
                    return this.columnTotal_Jabas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacionColumn {
                get {
                    return this.columnObservacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoColumn {
                get {
                    return this.columnproducto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Primera_FilaColumn {
                get {
                    return this.columnPrimera_Fila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERORow this[int index] {
                get {
                    return ((TABLERORow)(this.Rows[index]));
                }
            }
            
            public event TABLERORowChangeEventHandler TABLERORowChanging;
            
            public event TABLERORowChangeEventHandler TABLERORowChanged;
            
            public event TABLERORowChangeEventHandler TABLERORowDeleting;
            
            public event TABLERORowChangeEventHandler TABLERORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTABLERORow(TABLERORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERORow AddTABLERORow(
                        string str_fecha_venta, 
                        System.DateTime fecha_venta, 
                        string zona, 
                        string nombre_cliente, 
                        decimal Peso_bruto1, 
                        decimal Peso_bruto2, 
                        decimal Total_Bruto, 
                        decimal Total_Tara, 
                        decimal Total_Neto_Devoluciones, 
                        decimal Total_Neto, 
                        decimal Total_Importe, 
                        decimal Total_Amortizacion, 
                        decimal Total_Saldo, 
                        int Total_Jabas, 
                        string Observacion, 
                        string producto, 
                        bool Primera_Fila) {
                TABLERORow rowTABLERORow = ((TABLERORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        str_fecha_venta,
                        fecha_venta,
                        zona,
                        nombre_cliente,
                        Peso_bruto1,
                        Peso_bruto2,
                        Total_Bruto,
                        Total_Tara,
                        Total_Neto_Devoluciones,
                        Total_Neto,
                        Total_Importe,
                        Total_Amortizacion,
                        Total_Saldo,
                        Total_Jabas,
                        Observacion,
                        producto,
                        Primera_Fila};
                rowTABLERORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTABLERORow);
                return rowTABLERORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TABLERODataTable cln = ((TABLERODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TABLERODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstr_fecha_venta = base.Columns["str_fecha_venta"];
                this.columnfecha_venta = base.Columns["fecha_venta"];
                this.columnzona = base.Columns["zona"];
                this.columnnombre_cliente = base.Columns["nombre_cliente"];
                this.columnPeso_bruto1 = base.Columns["Peso_bruto1"];
                this.columnPeso_bruto2 = base.Columns["Peso_bruto2"];
                this.columnTotal_Bruto = base.Columns["Total_Bruto"];
                this.columnTotal_Tara = base.Columns["Total_Tara"];
                this.columnTotal_Neto_Devoluciones = base.Columns["Total_Neto_Devoluciones"];
                this.columnTotal_Neto = base.Columns["Total_Neto"];
                this.columnTotal_Importe = base.Columns["Total_Importe"];
                this.columnTotal_Amortizacion = base.Columns["Total_Amortizacion"];
                this.columnTotal_Saldo = base.Columns["Total_Saldo"];
                this.columnTotal_Jabas = base.Columns["Total_Jabas"];
                this.columnObservacion = base.Columns["Observacion"];
                this.columnproducto = base.Columns["producto"];
                this.columnPrimera_Fila = base.Columns["Primera_Fila"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstr_fecha_venta = new global::System.Data.DataColumn("str_fecha_venta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstr_fecha_venta);
                this.columnfecha_venta = new global::System.Data.DataColumn("fecha_venta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha_venta);
                this.columnzona = new global::System.Data.DataColumn("zona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzona);
                this.columnnombre_cliente = new global::System.Data.DataColumn("nombre_cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre_cliente);
                this.columnPeso_bruto1 = new global::System.Data.DataColumn("Peso_bruto1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeso_bruto1);
                this.columnPeso_bruto2 = new global::System.Data.DataColumn("Peso_bruto2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeso_bruto2);
                this.columnTotal_Bruto = new global::System.Data.DataColumn("Total_Bruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Bruto);
                this.columnTotal_Tara = new global::System.Data.DataColumn("Total_Tara", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Tara);
                this.columnTotal_Neto_Devoluciones = new global::System.Data.DataColumn("Total_Neto_Devoluciones", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Neto_Devoluciones);
                this.columnTotal_Neto = new global::System.Data.DataColumn("Total_Neto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Neto);
                this.columnTotal_Importe = new global::System.Data.DataColumn("Total_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Importe);
                this.columnTotal_Amortizacion = new global::System.Data.DataColumn("Total_Amortizacion", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Amortizacion);
                this.columnTotal_Saldo = new global::System.Data.DataColumn("Total_Saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Saldo);
                this.columnTotal_Jabas = new global::System.Data.DataColumn("Total_Jabas", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Jabas);
                this.columnObservacion = new global::System.Data.DataColumn("Observacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservacion);
                this.columnproducto = new global::System.Data.DataColumn("producto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproducto);
                this.columnPrimera_Fila = new global::System.Data.DataColumn("Primera_Fila", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimera_Fila);
                this.columnfecha_venta.DateTimeMode = global::System.Data.DataSetDateTime.Local;
                this.columnPrimera_Fila.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERORow NewTABLERORow() {
                return ((TABLERORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TABLERORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TABLERORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TABLERORowChanged != null)) {
                    this.TABLERORowChanged(this, new TABLERORowChangeEvent(((TABLERORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TABLERORowChanging != null)) {
                    this.TABLERORowChanging(this, new TABLERORowChangeEvent(((TABLERORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TABLERORowDeleted != null)) {
                    this.TABLERORowDeleted(this, new TABLERORowChangeEvent(((TABLERORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TABLERORowDeleting != null)) {
                    this.TABLERORowDeleting(this, new TABLERORowChangeEvent(((TABLERORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTABLERORow(TABLERORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRptTablero ds = new DSRptTablero();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TABLERODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOVIMIENTOSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTIPO_MOV;
            
            private global::System.Data.DataColumn columnCONCEPTO;
            
            private global::System.Data.DataColumn columnMONTO;
            
            private global::System.Data.DataColumn columnFECHA;
            
            private global::System.Data.DataColumn columnPERSONAL;
            
            private global::System.Data.DataColumn columnOBSERVACION;
            
            private global::System.Data.DataColumn columnMONTO_ANTERIOR;
            
            private global::System.Data.DataColumn columnFECHA_PAGO;
            
            private global::System.Data.DataColumn columnPRODUCTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSDataTable() {
                this.TableName = "MOVIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOVIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOVIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPO_MOVColumn {
                get {
                    return this.columnTIPO_MOV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONCEPTOColumn {
                get {
                    return this.columnCONCEPTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTOColumn {
                get {
                    return this.columnMONTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FECHAColumn {
                get {
                    return this.columnFECHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERSONALColumn {
                get {
                    return this.columnPERSONAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OBSERVACIONColumn {
                get {
                    return this.columnOBSERVACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONTO_ANTERIORColumn {
                get {
                    return this.columnMONTO_ANTERIOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FECHA_PAGOColumn {
                get {
                    return this.columnFECHA_PAGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCTOColumn {
                get {
                    return this.columnPRODUCTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSRow this[int index] {
                get {
                    return ((MOVIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event MOVIMIENTOSRowChangeEventHandler MOVIMIENTOSRowChanging;
            
            public event MOVIMIENTOSRowChangeEventHandler MOVIMIENTOSRowChanged;
            
            public event MOVIMIENTOSRowChangeEventHandler MOVIMIENTOSRowDeleting;
            
            public event MOVIMIENTOSRowChangeEventHandler MOVIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOVIMIENTOSRow(MOVIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSRow AddMOVIMIENTOSRow(string TIPO_MOV, string CONCEPTO, decimal MONTO, System.DateTime FECHA, string PERSONAL, string OBSERVACION, decimal MONTO_ANTERIOR, string FECHA_PAGO, string PRODUCTO) {
                MOVIMIENTOSRow rowMOVIMIENTOSRow = ((MOVIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TIPO_MOV,
                        CONCEPTO,
                        MONTO,
                        FECHA,
                        PERSONAL,
                        OBSERVACION,
                        MONTO_ANTERIOR,
                        FECHA_PAGO,
                        PRODUCTO};
                rowMOVIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOVIMIENTOSRow);
                return rowMOVIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOVIMIENTOSDataTable cln = ((MOVIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOVIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTIPO_MOV = base.Columns["TIPO_MOV"];
                this.columnCONCEPTO = base.Columns["CONCEPTO"];
                this.columnMONTO = base.Columns["MONTO"];
                this.columnFECHA = base.Columns["FECHA"];
                this.columnPERSONAL = base.Columns["PERSONAL"];
                this.columnOBSERVACION = base.Columns["OBSERVACION"];
                this.columnMONTO_ANTERIOR = base.Columns["MONTO_ANTERIOR"];
                this.columnFECHA_PAGO = base.Columns["FECHA_PAGO"];
                this.columnPRODUCTO = base.Columns["PRODUCTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTIPO_MOV = new global::System.Data.DataColumn("TIPO_MOV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_MOV);
                this.columnCONCEPTO = new global::System.Data.DataColumn("CONCEPTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONCEPTO);
                this.columnMONTO = new global::System.Data.DataColumn("MONTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTO);
                this.columnFECHA = new global::System.Data.DataColumn("FECHA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHA);
                this.columnPERSONAL = new global::System.Data.DataColumn("PERSONAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONAL);
                this.columnOBSERVACION = new global::System.Data.DataColumn("OBSERVACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOBSERVACION);
                this.columnMONTO_ANTERIOR = new global::System.Data.DataColumn("MONTO_ANTERIOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTO_ANTERIOR);
                this.columnFECHA_PAGO = new global::System.Data.DataColumn("FECHA_PAGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHA_PAGO);
                this.columnPRODUCTO = new global::System.Data.DataColumn("PRODUCTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCTO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSRow NewMOVIMIENTOSRow() {
                return ((MOVIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOVIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOVIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOVIMIENTOSRowChanged != null)) {
                    this.MOVIMIENTOSRowChanged(this, new MOVIMIENTOSRowChangeEvent(((MOVIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOVIMIENTOSRowChanging != null)) {
                    this.MOVIMIENTOSRowChanging(this, new MOVIMIENTOSRowChangeEvent(((MOVIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOVIMIENTOSRowDeleted != null)) {
                    this.MOVIMIENTOSRowDeleted(this, new MOVIMIENTOSRowChangeEvent(((MOVIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOVIMIENTOSRowDeleting != null)) {
                    this.MOVIMIENTOSRowDeleting(this, new MOVIMIENTOSRowChangeEvent(((MOVIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOVIMIENTOSRow(MOVIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRptTablero ds = new DSRptTablero();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOVIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TABLERORow : global::System.Data.DataRow {
            
            private TABLERODataTable tableTABLERO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TABLERORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTABLERO = ((TABLERODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string str_fecha_venta {
                get {
                    try {
                        return ((string)(this[this.tableTABLERO.str_fecha_ventaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'str_fecha_venta\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.str_fecha_ventaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha_venta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTABLERO.fecha_ventaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'fecha_venta\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.fecha_ventaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zona {
                get {
                    try {
                        return ((string)(this[this.tableTABLERO.zonaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'zona\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.zonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre_cliente {
                get {
                    try {
                        return ((string)(this[this.tableTABLERO.nombre_clienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'nombre_cliente\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.nombre_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Peso_bruto1 {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Peso_bruto1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Peso_bruto1\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Peso_bruto1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Peso_bruto2 {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Peso_bruto2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Peso_bruto2\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Peso_bruto2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Bruto {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_BrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Bruto\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_BrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Tara {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_TaraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Tara\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_TaraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Neto_Devoluciones {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_Neto_DevolucionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Neto_Devoluciones\' de la tabla \'TABLERO\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_Neto_DevolucionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Neto {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_NetoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Neto\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_NetoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Importe\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Amortizacion {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_AmortizacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Amortizacion\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_AmortizacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Saldo {
                get {
                    try {
                        return ((decimal)(this[this.tableTABLERO.Total_SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Saldo\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Total_Jabas {
                get {
                    try {
                        return ((int)(this[this.tableTABLERO.Total_JabasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total_Jabas\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Total_JabasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observacion {
                get {
                    try {
                        return ((string)(this[this.tableTABLERO.ObservacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Observacion\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.ObservacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string producto {
                get {
                    try {
                        return ((string)(this[this.tableTABLERO.productoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'producto\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.productoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Primera_Fila {
                get {
                    try {
                        return ((bool)(this[this.tableTABLERO.Primera_FilaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Primera_Fila\' de la tabla \'TABLERO\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLERO.Primera_FilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstr_fecha_ventaNull() {
                return this.IsNull(this.tableTABLERO.str_fecha_ventaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstr_fecha_ventaNull() {
                this[this.tableTABLERO.str_fecha_ventaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfecha_ventaNull() {
                return this.IsNull(this.tableTABLERO.fecha_ventaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfecha_ventaNull() {
                this[this.tableTABLERO.fecha_ventaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszonaNull() {
                return this.IsNull(this.tableTABLERO.zonaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzonaNull() {
                this[this.tableTABLERO.zonaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnombre_clienteNull() {
                return this.IsNull(this.tableTABLERO.nombre_clienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnombre_clienteNull() {
                this[this.tableTABLERO.nombre_clienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeso_bruto1Null() {
                return this.IsNull(this.tableTABLERO.Peso_bruto1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeso_bruto1Null() {
                this[this.tableTABLERO.Peso_bruto1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeso_bruto2Null() {
                return this.IsNull(this.tableTABLERO.Peso_bruto2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeso_bruto2Null() {
                this[this.tableTABLERO.Peso_bruto2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_BrutoNull() {
                return this.IsNull(this.tableTABLERO.Total_BrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_BrutoNull() {
                this[this.tableTABLERO.Total_BrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_TaraNull() {
                return this.IsNull(this.tableTABLERO.Total_TaraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_TaraNull() {
                this[this.tableTABLERO.Total_TaraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_Neto_DevolucionesNull() {
                return this.IsNull(this.tableTABLERO.Total_Neto_DevolucionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_Neto_DevolucionesNull() {
                this[this.tableTABLERO.Total_Neto_DevolucionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_NetoNull() {
                return this.IsNull(this.tableTABLERO.Total_NetoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_NetoNull() {
                this[this.tableTABLERO.Total_NetoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_ImporteNull() {
                return this.IsNull(this.tableTABLERO.Total_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_ImporteNull() {
                this[this.tableTABLERO.Total_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_AmortizacionNull() {
                return this.IsNull(this.tableTABLERO.Total_AmortizacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_AmortizacionNull() {
                this[this.tableTABLERO.Total_AmortizacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_SaldoNull() {
                return this.IsNull(this.tableTABLERO.Total_SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_SaldoNull() {
                this[this.tableTABLERO.Total_SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_JabasNull() {
                return this.IsNull(this.tableTABLERO.Total_JabasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_JabasNull() {
                this[this.tableTABLERO.Total_JabasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacionNull() {
                return this.IsNull(this.tableTABLERO.ObservacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacionNull() {
                this[this.tableTABLERO.ObservacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductoNull() {
                return this.IsNull(this.tableTABLERO.productoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductoNull() {
                this[this.tableTABLERO.productoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimera_FilaNull() {
                return this.IsNull(this.tableTABLERO.Primera_FilaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimera_FilaNull() {
                this[this.tableTABLERO.Primera_FilaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOVIMIENTOSRow : global::System.Data.DataRow {
            
            private MOVIMIENTOSDataTable tableMOVIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOVIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOVIMIENTOS = ((MOVIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_MOV {
                get {
                    try {
                        return ((string)(this[this.tableMOVIMIENTOS.TIPO_MOVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TIPO_MOV\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.TIPO_MOVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONCEPTO {
                get {
                    try {
                        return ((string)(this[this.tableMOVIMIENTOS.CONCEPTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CONCEPTO\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.CONCEPTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MONTO {
                get {
                    try {
                        return ((decimal)(this[this.tableMOVIMIENTOS.MONTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MONTO\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.MONTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FECHA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOVIMIENTOS.FECHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHA\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.FECHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSONAL {
                get {
                    try {
                        return ((string)(this[this.tableMOVIMIENTOS.PERSONALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PERSONAL\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.PERSONALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OBSERVACION {
                get {
                    try {
                        return ((string)(this[this.tableMOVIMIENTOS.OBSERVACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'OBSERVACION\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.OBSERVACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MONTO_ANTERIOR {
                get {
                    try {
                        return ((decimal)(this[this.tableMOVIMIENTOS.MONTO_ANTERIORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MONTO_ANTERIOR\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.MONTO_ANTERIORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FECHA_PAGO {
                get {
                    try {
                        return ((string)(this[this.tableMOVIMIENTOS.FECHA_PAGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHA_PAGO\' de la tabla \'MOVIMIENTOS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.FECHA_PAGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCTO {
                get {
                    if (this.IsPRODUCTONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableMOVIMIENTOS.PRODUCTOColumn]));
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS.PRODUCTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPO_MOVNull() {
                return this.IsNull(this.tableMOVIMIENTOS.TIPO_MOVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPO_MOVNull() {
                this[this.tableMOVIMIENTOS.TIPO_MOVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONCEPTONull() {
                return this.IsNull(this.tableMOVIMIENTOS.CONCEPTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONCEPTONull() {
                this[this.tableMOVIMIENTOS.CONCEPTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTONull() {
                return this.IsNull(this.tableMOVIMIENTOS.MONTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTONull() {
                this[this.tableMOVIMIENTOS.MONTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFECHANull() {
                return this.IsNull(this.tableMOVIMIENTOS.FECHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFECHANull() {
                this[this.tableMOVIMIENTOS.FECHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSONALNull() {
                return this.IsNull(this.tableMOVIMIENTOS.PERSONALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSONALNull() {
                this[this.tableMOVIMIENTOS.PERSONALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOBSERVACIONNull() {
                return this.IsNull(this.tableMOVIMIENTOS.OBSERVACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOBSERVACIONNull() {
                this[this.tableMOVIMIENTOS.OBSERVACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTO_ANTERIORNull() {
                return this.IsNull(this.tableMOVIMIENTOS.MONTO_ANTERIORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTO_ANTERIORNull() {
                this[this.tableMOVIMIENTOS.MONTO_ANTERIORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFECHA_PAGONull() {
                return this.IsNull(this.tableMOVIMIENTOS.FECHA_PAGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFECHA_PAGONull() {
                this[this.tableMOVIMIENTOS.FECHA_PAGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCTONull() {
                return this.IsNull(this.tableMOVIMIENTOS.PRODUCTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCTONull() {
                this[this.tableMOVIMIENTOS.PRODUCTOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TABLERORowChangeEvent : global::System.EventArgs {
            
            private TABLERORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERORowChangeEvent(TABLERORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TABLERORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOVIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private MOVIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSRowChangeEvent(MOVIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591